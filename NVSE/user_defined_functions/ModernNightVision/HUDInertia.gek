int iPlrInAir
float fPlrPosZ

float fDeltaTime
float fYaw
float fPitch
float fOffsetMoveY
float fOffsetCamX
float fOffsetCamY
float fOffsetAnimX
float fOffsetAnimY
float fOffsetUIX
float fOffsetUIY

float fMouseInertiaMul
float fSmoothRate

float fForwardX
float fForwardY
float fVelocityXWorld
float fVelocityYWorld
float fVelocityXLocal
float fVelocityYLocal
float fSpeed
float fSpeedMax
float fSpeedFactor
float fAnimPhase

float fOverlayTilt

float fTemp
ref rTemp

begin Function {}

	if eval GetUIFloatAlt "HUDMainMenu\ModernNightVision\_AlphaOverlay" == 0 || (fDeltaTime = GGetSecPass) <= 0
		return
	endif

	if eval IsPC1stPerson
		SetUIFloatAlt "HUDMainMenu\ModernNightVision\_1stPerson" 1
	Else
		SetUIFloatAlt "HUDMainMenu\ModernNightVision\_1stPerson" 0
		return
	endif

	; Randomize static rotation
	SetUIFloatAlt "HUDMainMenu\ModernNightVision\_Random" (GetRandomInRange 0 2)

	; Parameters
	iPlrInAir = (eval Player.GetFallTimeElapsed > 0.0)
	fMouseInertiaMul = Goo1.AuxVarGetFlt "*SNV_InertiaSet" 0
	fSmoothRate = 1 - Exp(-(Goo1.AuxVarGetFlt "*SNV_InertiaSet" 1) * fDeltaTime)
	fSpeedMax = Goo1.AuxVarGetFlt "*SNV_InertiaSet" 7

	; Rotation inertia
	fOffsetCamX = (((Fmod ((fYaw = Player.GetAngle Z) - (Goo1.AuxVarGetFlt "*SNV_Inertia" 0)) 360 180) - 360) / fDeltaTime) * fMouseInertiaMul * 0.01
	fOffsetCamY = (((Fmod ((fPitch = Player.GetAngle X) - (Goo1.AuxVarGetFlt "*SNV_Inertia" 1)) 360 180) - 360) / fDeltaTime) * fMouseInertiaMul * 0.01
	Goo1.AuxVarSetFlt "*SNV_Inertia" fYaw 0
	Goo1.AuxVarSetFlt "*SNV_Inertia" fPitch 1
	if eval V3Len fOffsetCamX fOffsetCamY 0 > 250
		V3Norm "fOffsetCamX" "fOffsetCamY" "fOffsetCamZ" (fOffsetCamX) (fOffsetCamY) (fTemp)
	endif

	; Vertical inertia
	fOffsetMoveY = Clamp ((((fPlrPosZ = Player.GetPos Z) - (Goo1.AuxVarGetFlt "*SNV_Inertia" 4)) / fDeltaTime) * (Goo1.AuxVarGetFlt "*SNV_InertiaSet" 2) * ((eval iPlrInAir) + 1)) -75 75
	Goo1.AuxVarSetFlt "*SNV_Inertia" fPlrPosZ 4

	; Calculate player's local velocity/speed
	fForwardX = FSin fYaw
	fForwardY = FCos fYaw
	fVelocityXWorld = Player.GetActorVelocity X
	fVelocityYWorld = Player.GetActorVelocity Y
	fVelocityXLocal = fForwardY * fVelocityXWorld - fForwardX * fVelocityYWorld
	fVelocityYLocal = fForwardY * fVelocityYWorld + fForwardX * fVelocityXWorld
	fSpeed = V3Len fVelocityXLocal fVelocityYLocal 0
	fSpeedFactor = Clamp (fSpeed / fSpeedMax) 0 1

	; Calculate movement animation offsets
	if eval iPlrInAir == 0
		Goo1.AuxVarSetFlt "*SNV_Inertia" (fAnimPhase = Goo1.AuxVarGetFlt "*SNV_Inertia" 5 + (fSpeed * fDeltaTime * fSpeedFactor)) 5
		fOffsetAnimY = FSin(fAnimPhase * (Goo1.AuxVarGetFlt "*SNV_InertiaSet" 5)) * (Goo1.AuxVarGetFlt "*SNV_InertiaSet" 3) * fSpeedFactor * fSpeedFactor
		fOffsetAnimX = FSin(fAnimPhase * (Goo1.AuxVarGetFlt "*SNV_InertiaSet" 6)) * (Goo1.AuxVarGetFlt "*SNV_InertiaSet" 4) * fSpeedFactor * (Clamp (-(fVelocityXLocal) / fSpeedMax) -1 1)
		if eval Abs(fVelocityXLocal) < 0.1
			fOffsetAnimX = 0
			if eval fSpeed == 0 && fAnimPhase > 0
				Goo1.AuxVarSetFlt "*SNV_Inertia" 0 5
			endif
		endif
	endif

	; UI interpolation
	Goo1.AuxVarSetFlt "*SNV_Inertia" (fOffsetUIX = Lerp (Goo1.AuxVarGetFlt "*SNV_Inertia" 2) (fOffsetCamX + fOffsetAnimX) fSmoothRate) 2								; UI offset X
	Goo1.AuxVarSetFlt "*SNV_Inertia" (fOffsetUIY = Lerp (Goo1.AuxVarGetFlt "*SNV_Inertia" 3) (fOffsetCamY + fOffsetAnimY + fOffsetMoveY) fSmoothRate) 3					; UI offset Y
	Goo1.AuxVarSetFlt "*SNV_Inertia" (fOverlayTilt = Lerp (Goo1.AuxVarGetFlt "*SNV_Inertia" 6) (-(fVelocityXLocal) * (0.10 / fSpeedMax) * fSpeedFactor) fSmoothRate) 6	; UI rotation
	SetUIFloatAlt "HUDMainMenu\ModernNightVision\_OffsetX" fOffsetUIX
	SetUIFloatAlt "HUDMainMenu\ModernNightVision\_OffsetY" fOffsetUIY
	SetUIFloatAlt "HUDMainMenu\ModernNightVision\_Rotation" fOverlayTilt

	; IMOD transition
	if eval Goo1.AuxVarGetFlt "*SNV_DoF"
		if Goo1.AuxVarGetFlt "SNV_Mode" 1 == 0
			rTemp = NVDLC03GhostNightvisionISFX
		Else
			rTemp = NVDLC04RedNightvisionISFX
		endif
		Goo1.AuxVarSetFlt "*SNV_DoF" (fTemp = GetMinOf ((Goo1.AuxVarGetFlt "*SNV_DoF" 1) + fDeltaTime) 0.5) 1
		SetImageSpaceModTrait rTemp 45 (GetMaxOf (3-(fTemp * 6)) 0.3)
		SetImageSpaceModTrait rTemp 46 (0.006-(fTemp * 0.012))
		if eval fTemp == 0.5
			Goo1.AuxVarSetFlt "*SNV_DoF" 0 0
		endif
	endif

end