int	iKeyID

int iVisionState
int iVisionMode
int iFlag
int iSize
int iCount
float fEnergy
float fEnergyUse
ref rArmor
ref rHat
ref rGlasses
ref rEnergyItem
string_var sEnergy

begin Function {iKeyID}

	; Toggle vision mode
	if eval (!MenuMode && Player.GetDead == 0 && AuxTimerTimeLeft "*SNV_KeyToggle" != -1)
	else
		return
	endif

	AuxTimerStop "*SNV_KeyToggle"

	; Validate vision modes
	iVisionState = Goo1.AuxVarGetFlt "SNV_Mode" 0
	if eval (Goo1.AuxVarGetFlt "*SNV_INI" 6 == 0 && Goo1.AuxVarGetFlt "*SNV_INI" 7 == 0)
		return
	elseif eval iVisionState == 1 && Goo1.AuxVarGetFlt "*SNV_INI" 4 == 0 && (Goo1.AuxVarGetFlt "*SNV_INI" 6 == 0 || Goo1.AuxVarGetFlt "*SNV_INI" 7 == 0)
		return
	endif

	rHat = Player.GetEqObj 10
	rGlasses = Player.GetEqObj 11
	if eval Goo1.AuxVarGetFlt "*SNV_INI" 3 && Player.HasPerk (EditorIDToFormID "CWxImplantVisionModePerk")
		iCount = 1
	elseif eval IsFormValid rHat && (IsPA rHat || HasKeyword rHat "ModernNightVision")
		rArmor = rHat
		iCount = 1
	elseif eval IsFormValid rGlasses && (IsPA rGlasses || HasKeyword rGlasses "ModernNightVision")
		rArmor = rGlasses
		iCount = 1
	endif

	if eval iCount == 0
		return
	endif

	; Check for energy requirements
	if eval GetUIFloatAlt "HUDMainMenu\ModernNightVision\_EnergyRequired" == 1 && Goo1.AuxVarGetFlt "SNV_Mode" 2 == 0
		iSize = Goo1.AuxVarSize "*SNV_Energy"
		while (iSize -= 2) > -1
			if eval (iCount = Player.GetItemCount (rEnergyItem = Goo1.AuxVarGetRef "*SNV_Energy" iSize)) > 0
				break
			endif
		loop
		SetUIStringAlt "HUDMainMenu\ModernNightVision\EnergyDisplay\ItemName\string" "%z" (GetAmmoName 1 rEnergyItem)
		SetUIStringAlt "HUDMainMenu\ModernNightVision\EnergyDisplay\CountText\string" "%g" iCount
		SetUIFloatAlt "HUDMainMenu\ModernNightVision\_EnergyCount" iCount
		SetUIFloatGradual "HUDMainMenu\ModernNightVision\EnergyDisplay\CountText\_Alpha" 510
		SetUIFloatGradual "HUDMainMenu\ModernNightVision\EnergyDisplay\CountText\_Alpha" 510 0 1
		if eval iCount > 0
			Player.RemoveItem rEnergyItem 1 1
			Player.AddItemAlt (GetAmmoCasing rEnergyItem) 1
			Goo1.AuxVarSetFlt "SNV_Mode" (fEnergy = Goo1.AuxVarGetFlt "*SNV_Energy" (iSize + 1)) 2
			Goo1.AuxVarSetFlt "SNV_Mode" fEnergy 3
			SetUIFloatGradual "HUDMainMenu\ModernNightVision\_EnergyCharge" 0 fEnergy 1
			SetUIFloatAlt "HUDMainMenu\ModernNightVision\_EnergyMax" fEnergy
			PlaySound WPNPistolLaserCharge
		else
			MessageExAlt 3 "#0|You have no item to charge your vision modes."
			PlaySound OBJSwitchButtonBFail
			SetUIFloatGradual "HUDMainMenu\ModernNightVision\_EnergyAlpha" 2 0 1
			return
		endif
	endif

	; Turn vision mode on
	if eval iVisionState == 0

		; Validate vision mode
		iVisionMode = Goo1.AuxVarGetFlt "SNV_Mode" 1
		; Night vision unavailable
		if eval iVisionMode == 0 && Goo1.AuxVarGetFlt "*SNV_INI" 6 == 0
			iVisionMode = 1
		; Thermal vision unavailable
		elseif eval Goo1.AuxVarGetFlt "*SNV_INI" 7 == 0
			iVisionMode = 0
		endif
		Goo1.AuxVarSetFlt "SNV_Mode" iVisionMode 1
		SetUIFloatAlt "HUDMainMenu\ModernNightVision\_Mode" iVisionMode

		; Update Energy Display text
		if eval GetUIFloatAlt "HUDMainMenu\ModernNightVision\_EnergyRequired" == 1
			fEnergy = Goo1.AuxVarGetFlt "SNV_Mode" 2
			if eval GetUIFloatAlt "HUDMainMenu\ModernNightVision\EnergyDisplay\_ChargeStyle" == 1
				sEnergy = sv_Construct "%g%%" (Flr (((fEnergy / (Goo1.AuxVarGetFlt "SNV_Mode" 3)) * 100) + 0.5))
			elseif eval (fEnergyUse = GetUIFloatAlt "HUDMainMenu\ModernNightVision\_EnergyUseCalc") > 0
				sEnergy = sv_Construct "%gs" (Flr ((fEnergy / fEnergyUse) + 0.5))
			else
				sEnergy = "-"
			endif
			SetUIStringAlt "HUDMainMenu\ModernNightVision\EnergyDisplay\ChargeText\string" "%z" sEnergy
		endif
		SetUIFloatGradual "HUDMainMenu\ModernNightVision\_EnergyAlpha" 0 1 0.2

	endif

	; Play animation
	if eval Goo1.AuxVarGetFlt "*SNV_INI" 5 && IsPC1stPerson
		if eval Player.IsIdlePlaying || Player.IsAnimPlayingEx 5 || Player.IsAnimPlayingEx 4 || Player.GetAnimAction == 13 || Player.GetIsRagdolled || IsInKillCam; || GetPlayerControlsDisabled 1 1 0 1 1 0 0
			return
		else
			if eval Player.IsAnimSequencePlaying "ModernNightVision\On.kf"
				Player.DeactivateAnim "ModernNightVision\On.kf"
			endif
			if eval Player.IsAnimSequencePlaying "ModernNightVision\Off.kf"
				Player.DeactivateAnim "ModernNightVision\Off.kf"
			endif
			if eval GSIV 0 > 0
				SetSmoothIronsightsValue 0 0
			endif
			DisablePlayerControlsAltEx 30100
			Goo1.AuxVarSetRef "SNV_Armor" rArmor
			Player.PlayAnimationPath "ModernNightVision\On.kf" 1
			AuxTimerStart "*SNV_Animation" 1.05 14
			Goo1.AuxVarSetFlt "*SNV_Animation" 1

			; Overlay fade
			if eval iVisionState == 0
				SetUIFloatGradual "HUDMainMenu\ModernNightVision\_AlphaOverlay" 0 1 0.2
			endif

		endif

	; Skip animation
	else
		Goo1.AuxVarSetRef "SNV_Armor" rArmor
		; Overlay fade
		if eval iVisionState == 0
			SetUIFloatGradual "HUDMainMenu\ModernNightVision\_AlphaOverlay" 1
		endif
		Call (CompileScript "ModernNightVision/ToggleOn.gek") 0
	endif

	sv_Destruct sEnergy

end